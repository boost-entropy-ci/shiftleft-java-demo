on:
  workflow_dispatch:
  push:
    branches:
        - master
        - main
  pull_request:
    branches:
      - master
      - main
    types:
      - opened
      - synchronize
jobs:
  scan_job:
    name: Boost Security Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: BoostSecurity Scanner
        uses: peaudecastor/boost-security-scanner-github@v2
        with:
          action: scan
          additional_args: --partial
          api_token: ${{ secrets.BOOST_API_TOKEN }}
  findsecbugs_job:
    name: FindSecBugs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: adopt
          cache: maven
      - name: Prepare Java scanner script
        run: |
          cat << EOF > /usr/local/bin/scan.sh
          #!/bin/bash
          set -e
          mvn clean compile com.github.spotbugs:spotbugs-maven-plugin:spotbugs -Dspotbugs.failOnError=false -Dspotbugs.sarifOutput=true -Dspotbugs.sarifFullPath=true > /dev/null
          jq '.runs[].invocations[].executionSuccessful=true' target/spotbugsSarif.json
          EOF
          chmod +x /usr/local/bin/scan.sh
      - name: FindSecBugs Scanner
        uses: peaudecastor/boost-security-scanner-github@v2
        with:
          action: exec
          additional_args: --partial --require-full-repo
          api_token: ${{ secrets.BOOST_API_TOKEN }}
          exec_command: /usr/local/bin/scan.sh
  codeql_job:
    name: CodeQL for Java
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: adopt
          cache: maven
      - name: Prepare Java scanner script
        run: |
          echo "-- Ensure directories for mounted volumes exist"
          chmod 777 $PWD # Needed by CodeQL Docker to compile to ./target
          mkdir -p $HOME/.m2
          chmod 777 $HOME/.m2 # Needed by CodeQL Docker to update Maven caches
          mkdir -p $HOME/codeql-dbs
          chmod 777 $HOME/codeql-dbs # Needed by CodeQL Docker to save its DB
          
          echo "-- Pull CodeQL Docker ahead of time"
          docker pull ghcr.io/nealfennimore/codeql:java
          
          echo "-- Creating scan script"
          cat << EOF > /usr/local/bin/scan.sh
          #!/bin/bash
          set -e
          docker run --rm --name codeql \
            -v $PWD:/tmp/src \
            -v $HOME/.m2:/home/cli/.m2 \
            -v $HOME/codeql-dbs:/tmp/dbs \
            ghcr.io/nealfennimore/codeql:java \
            codeql database create --language=java --command="mvn clean compile -DskipTests" --overwrite --source-root /tmp/src /tmp/dbs/code-db > /dev/null
          docker run --rm --name codeql \
            -v $HOME/codeql-dbs:/tmp/dbs \
            ghcr.io/nealfennimore/codeql:java \
            codeql database analyze /tmp/dbs/code-db java-code-scanning.qls --sarif-category=java --format=sarif-latest --output=/tmp/dbs/code-db/output.sarif  > /dev/null
          cat $HOME/codeql-dbs/code-db/output.sarif
          EOF
          
          chmod +x /usr/local/bin/scan.sh
      - name: CodeQL for Java Scanner
        uses: peaudecastor/boost-security-scanner-github@v2
        with:
          action: exec
          additional_args: --partial --require-full-repo
          api_token: ${{ secrets.BOOST_API_TOKEN }}
          exec_command: /usr/local/bin/scan.sh
  complete_scan:
    name: Complete Scan
    needs: [scan_job, findsecbugs_job, codeql_job]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Complete Scan
        uses: peaudecastor/boost-security-scanner-github@v2
        with:
          action: complete
          api_token: ${{ secrets.BOOST_API_TOKEN }}
