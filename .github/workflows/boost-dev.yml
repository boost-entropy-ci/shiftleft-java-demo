name: boost SAST (Dev)
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'INFO'
        type: choice
        options:
        - INFO
        - DEBUG
      scriptDebug:
        description: 'exec-command log level'
        required: true
        default: 'INFO'
        type: choice
        options:
        - INFO
        - DEBUG
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  findsecbugs:
    name: FindSecBugs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: adopt
          cache: maven
      - name: Prepare Java scanner script
        env:
          SCRIPT_LOG_LEVEL: ${{ github.event.inputs.scriptDebug }}
        run: |
          cat << EOF > /usr/local/bin/scan.sh
          #!/bin/bash
          set -e
          if [[ "$SCRIPT_LOG_LEVEL" == "DEBUG" ]]; then
            set -x
            mvn clean compile com.github.spotbugs:spotbugs-maven-plugin:spotbugs \
              -Dspotbugs.failOnError=false -Dspotbugs.sarifOutput=true -Dspotbugs.sarifFullPath=true
          else
            mvn clean compile com.github.spotbugs:spotbugs-maven-plugin:spotbugs \
              -Dspotbugs.failOnError=false -Dspotbugs.sarifOutput=true -Dspotbugs.sarifFullPath=true > /dev/null
          fi
          jq '.runs[].invocations[].executionSuccessful=true' target/spotbugsSarif.json
          EOF
          chmod +x /usr/local/bin/scan.sh
      - name: FindSecBugs
        uses: boostsecurityio/boostsec-scanner-github@v3
        env:
          BOOST_LOG_LEVEL: ${{ github.event.inputs.logLevel }}
        with:
          step_name: findsecbugs
          action: exec
          additional_args: --require-full-repo
          exec_command: /usr/local/bin/scan.sh
          api_endpoint: https://api.dev.boostsec.io
          api_token: ${{ secrets.BOOST_API_KEY_DEV }}
  codeql:
    name: CodeQL for Java
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: adopt
          cache: maven
      - name: Prepare Java scanner script
        env:
          SCRIPT_LOG_LEVEL: ${{ github.event.inputs.scriptDebug }}
        run: |
          echo "-- Ensure directories for mounted volumes exist"
          chmod 777 $PWD # Needed by CodeQL Docker to compile to ./target
          mkdir -p $HOME/.m2
          chmod 777 $HOME/.m2 # Needed by CodeQL Docker to update Maven caches
          mkdir -p $HOME/codeql-dbs
          chmod 777 $HOME/codeql-dbs # Needed by CodeQL Docker to save its DB
          
          echo "-- Pull CodeQL Docker ahead of time"
          docker pull ghcr.io/nealfennimore/codeql:java
          
          echo "-- Creating scan script"
          cat << EOF > /usr/local/bin/scan.sh
          #!/bin/bash
          set -e
          if [[ "$SCRIPT_LOG_LEVEL" == "DEBUG" ]]; then
            set -x
            docker run --rm --name codeql \
              -v $PWD:/tmp/src \
              -v $HOME/.m2:/home/cli/.m2 \
              -v $HOME/codeql-dbs:/tmp/dbs \
              ghcr.io/nealfennimore/codeql:java \
              codeql database create --language=java --command="mvn clean compile -DskipTests" --overwrite --source-root /tmp/src /tmp/dbs/code-db
            docker run --rm --name codeql \
              -v $HOME/codeql-dbs:/tmp/dbs \
              ghcr.io/nealfennimore/codeql:java \
              codeql database analyze /tmp/dbs/code-db java-code-scanning.qls --sarif-category=java --format=sarif-latest --output=/tmp/dbs/code-db/output.sarif
          else
            docker run --rm --name codeql \
              -v $PWD:/tmp/src \
              -v $HOME/.m2:/home/cli/.m2 \
              -v $HOME/codeql-dbs:/tmp/dbs \
              ghcr.io/nealfennimore/codeql:java \
            codeql database create --language=java --command="mvn clean compile -DskipTests" --overwrite --source-root /tmp/src /tmp/dbs/code-db > /dev/null
            docker run --rm --name codeql \
              -v $HOME/codeql-dbs:/tmp/dbs \
              ghcr.io/nealfennimore/codeql:java \
              codeql database analyze /tmp/dbs/code-db java-code-scanning.qls --sarif-category=java --format=sarif-latest --output=/tmp/dbs/code-db/output.sarif  > /dev/null
          fi
          cat $HOME/codeql-dbs/code-db/output.sarif
          EOF
          
          chmod +x /usr/local/bin/scan.sh
      - name: CodeQL for Java
        uses: boostsecurityio/boostsec-scanner-github@v3
        env:
          BOOST_LOG_LEVEL: ${{ github.event.inputs.logLevel }}
        with:
          step_name: codeql-for-java
          action: exec
          additional_args: --require-full-repo
          exec_command: /usr/local/bin/scan.sh
          api_endpoint: https://api.dev.boostsec.io
          api_token: ${{ secrets.BOOST_API_KEY_DEV }}
